{"version":3,"file":"index.js","sources":["../src/Transformers.js","../Communicator.js"],"sourcesContent":["import { isObject, isArray, toPlainObject, toArray } from 'lodash';\n\nconst object = (data = {}) => {\n  if (isObject(data)) return data;\n  return toPlainObject(data);\n};\nconst array = (data = []) => {\n  if (isArray) return data;\n  return toArray(data);\n};\n\nconst cumulativeArray = check => (data, oldData = []) => {\n  if (!data) return oldData;\n  if (!check) return oldData.concat(isArray(data) ? data : toArray(data));\n};\n\nexport default {\n  object,\n  array,\n};\n","/* import  */\nimport { isObject, isFunction, isArray } from \"lodash\";\nimport { transformers } from \"./src/index\";\n\n/* CONSTS */\nconst excluded = [\"body\", \"GET\", \"expected\"];\nconst positiveResponseStatus = [200, 201, 202, 204, 205];\n\n/**\n * @description Error object containing error messages\n * @todo Implement proper error objects\n * @memberof Communicator\n */\nconst errors = {\n  PREFETCH_NOT_A_FUNCTION:\n    \"Prefetch is expected to be a function. I dont know what I have here...\",\n  PARAMS_NOT_OBJECT: \"Error with params. You shoud pass object as params.\",\n  PARAM_OBJECT_ERROR:\n    \"Error, your object, in params... There is something wrong with it.\"\n};\n\n/**\n * @description Merges 2 object recursavly, overriding values from second to first object.\n * @param {Obect} obj1 - firs object, will be overriden\n * @param {Obect} obj2 - second object\n */\nconst mergeTwo = (obj1, obj2) => {\n  const _obj2 = obj2;\n  let out = {};\n  Object.keys(obj1).forEach(k => {\n    if (typeof obj1[k] === \"object\" && obj1[k].constructor !== Array) {\n      if (obj2[k] && typeof obj2[k] === \"object\") {\n        out[k] = mergeTwo(obj1[k], obj2[k]);\n      } else {\n        out[k] = obj1[k];\n      }\n    } else if (obj1[k].constructor === Array) {\n      out[k] = obj1[k];\n      if (obj2[k] && obj2[k].constructor === Array) {\n        out[k] = obj1[k].concat(obj2[k]);\n      }\n    } else if (obj2[k]) {\n      out[k] = obj2[k];\n    } else out[k] = obj1[k];\n    delete _obj2[k];\n  });\n  out = Object.assign({}, out, _obj2);\n  return out;\n};\n/**\n * @description Merges multiple objects recursevly\n * @param {Spread of objects} args\n */\nconst deepMerge = (...args) => {\n  let out = {};\n  args.forEach(e => {\n    if (e.constructor === Object) out = mergeTwo(out, e);\n  });\n  console.log(JSON.parse(JSON.stringify(out)));\n  return out;\n};\n\nclass Communicator {\n  constructor(baseUrl = \"\", dispatch = null) {\n    this.baseUrl = baseUrl;\n    this.dispatch = dispatch;\n    this.fetch = fetch.bind(window);\n    this.reducerPool = {};\n    this.prefetchPool = {};\n    this.postfetchPool = {};\n    this.transformerPool = {};\n    this.actions = {};\n    this.getState = undefined;\n    this.basePrefix = \"api(.)(.)\";\n    this.baseOptions = {\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Cache: \"no-cache\",\n        credentials: \"same-origin\"\n      }\n    };\n  }\n\n  /**\n   * @description Function used for constructing url and inserting parametars in to the\n   * predefined holders.\n   * @example\n   * baseUrl = localhost\n   * url = /url/:id\n   * request = {id: '22'}\n   * output = localhost/url/22\n   * Function also accepts absolute url, in which case will skip adding base url.\n   * Absoulute url must contain http:// or https://\n   * @example\n   * baseUrl = localhost\n   * url = http://someurl.com/url/:id\n   * request = {id: '22'}\n   * output = someurl.com/url/22\n   * @param {Object} - request object\n   * @param {String} - original url\n   * @return {String} - url with inserted request parametars\n   * @memberof Communicator\n   */\n  constructUrl = (endPointUrl, request) => {\n    let url = endPointUrl;\n    if (endPointUrl.indexOf(\"http\") === -1) {\n      url = `${this.baseUrl}${endPointUrl}`;\n    }\n    if (isObject(request)) {\n      Object.keys(request).forEach(key => {\n        if (excluded.indexOf(key) === -1) {\n          const regex = new RegExp(`:${key}`);\n          if (regex.test(url)) {\n            url = url.replace(regex, request[key]);\n          }\n        } else if (key === \"GET\") {\n          url = url + this.getGetParamsAsString(request[key]);\n        }\n      });\n    }\n    return url;\n  };\n\n  /**\n   * @description Helper function that converts js object to GET params string.\n   * {id:'123', user:'some'} -> \"?id=123&user=some\"\n   * @param {Object} getObj - object containing GET key value pairs\n   * @memberof Communicator\n   */\n  getGetParamsAsString = getObj => {\n    let out = \"?\";\n    Object.keys(getObj).forEach((k, i) => {\n      if (typeof getObj[k] !== \"object\" && typeof getObj[k] !== \"function\")\n        out = out + (i !== 0 ? \"&\" : \"\") + k + \"=\" + getObj[k];\n    });\n    return out;\n  };\n\n  /**\n   * @description\n   * Helper function that extracts , checks and prepares body object\n   * @param {Object} request - request object containing body key.\n   * body can either be preparsed or as js object.\n   * @returns {Object} - {body: JSON.stringify()}\n   */\n  getBody = request => {\n    if (!request.body) return false;\n    if (typeof request.body === \"string\" && isObject(JSON.parse(request.body)))\n      return { body: request.body };\n    if (isObject(request.body)) return { body: JSON.stringify(request.body) };\n    return false;\n  };\n\n  /**\n   * @description Function that processes params of the request such as body.\n   * You can send value either as object or as stringified object\n   * @param {Object} - params object\n   * @return {Object} - object containing keys and stringified values\n   * @memberof Communicator\n   *\n   */\n  processParams = params => {\n    /* TODO - separate body and rest. add ability to pass new fetch options overrides */\n    if (!isObject(params)) throw errors.PARAMS_NOT_OBJECT;\n    const out = {};\n    Object.keys(params).forEach(k => {\n      switch (typeof params[k]) {\n        case \"object\":\n          out[k] = JSON.stringify(params[k]);\n          break;\n        case \"string\":\n          if (!isObject(JSON.parse(params[k]))) {\n            throw errors.PARAM_OBJECT_ERROR;\n          } else out[k] = params[k];\n          break;\n        default:\n          break;\n      }\n    });\n    return out;\n  };\n\n  /**\n   * @description This is a main fetch function. This will resolve the action and return either a Promise if no\n   *  dispatch is provided or it will dispatch\n   * success/ failure action to redux.\n   * @param {String} url - target url. This will be modified by request object if needed\n   * @param {Object} options - options of the request. Options contains data like headers, method\n   * type and other data you want to include to fetch request.\n   * This will be merged with baseOptions ( globals you can set at creation, options that apply to\n   *  all) and param options. Param options contains aditional\n   * data like body or can modifiy request overriding baseOptions and setted request options.\n   * @param {Object} request - object containing request data that will modify end URL. TODO -\n   * maybe move body params here...\n   * @param {String} name - Name of the api action. Based on name a appropriate action will be\n   * dispatched.\n   * @param {Boolean} useEmptyHeaders - if true, empty headers will be sent.\n   * @todo test expected response json/text\n   */\n  baseFetch = (\n    url,\n    options = {} /* options from call */,\n    requestParams = {} /* get, post params */,\n    reqestOptions = {} /* options from a singel call */,\n    name,\n    useEmptyHeaders = false\n  ) => {\n    const expected = requestParams.expected || \"json\";\n    let endPointUrl;\n    let endOption = deepMerge(\n      this.baseOptions,\n      options,\n      reqestOptions\n      /* we add body later */\n    );\n    /* clear headers if needed */\n    if (useEmptyHeaders) endOption = { headers: {} };\n\n    let object = {\n      actions: this.actions,\n      getState: this.getState,\n      dispatch: this.dispatch,\n      params: requestParams,\n      options: endOption,\n      url\n    };\n\n    if (this.prefetchPool[name] && this.getState) {\n      /* we need this to be an array... */\n      const pf = isArray(this.prefetchPool[name])\n        ? this.prefetchPool[name]\n        : [this.prefetchPool[name]];\n\n      /* you can either change object directly or return {params, options} */\n      pf.forEach(e => {\n        const res = e(object);\n        if (res) object = deepMerge(object, res);\n      });\n    }\n\n    endOption = deepMerge(object.options, this.getBody(object.params));\n    endPointUrl = this.constructUrl(object.url, object.params);\n    /* if no dispatch return promise */\n    if (!this.dispatch || this.dispatch === null) {\n      return this.fetch(endPointUrl, endOption);\n    }\n    /* dispatch action start */\n    this.dispatch(this.actionStart(name, endPointUrl, endOption));\n    /* fetch part */\n    let res;\n    this.fetch(endPointUrl, endOption)\n      .then(response => {\n        /* this object will be passes to second .then to be included in END dispatch */\n        res = {\n          ok: response.ok,\n          redirected: response.redirected,\n          status: response.status,\n          type: response.type,\n          url: response.url\n        };\n        if (\n          positiveResponseStatus.indexOf(response.status) !== -1 ||\n          response.ok\n        ) {\n          return Promise.all([response[expected](), Promise.resolve(res)]);\n        }\n        throw response;\n      })\n      .then(json => {\n        /* json[0]->actual response, json[1]->res object storing some metadata */\n        this.dispatch(this.actionEnd(name, json[0], json[1]));\n      })\n      .catch(e => {\n        this.dispatch(this.actionError(name, res, e.message));\n      });\n    return true;\n  };\n\n  /**\n   * @description Function that creates functions from objects\n   * @param {Object} endpoints - object from witch function will be created.\n   * Keys will be the function names.\n   * @memberof Communicator\n   */\n  setEndpoints = endpoints => {\n    Object.keys(endpoints).forEach(k => {\n      const {\n        url,\n        prefetch,\n        reducer,\n        options,\n        useEmptyHeaders,\n        postfetch,\n        transformer = transformers.object\n      } = endpoints[k];\n\n      if (reducer) this.reducerPool[k] = reducer;\n      else this.reducerPool[k] = this.constructGenericReducer(k);\n      if (prefetch && (isFunction(prefetch) || isArray(prefetch))) {\n        this.prefetchPool[k] = prefetch;\n      }\n      if (postfetch && (isFunction(postfetch) || isArray(postfetch))) {\n        this.postfetchPool[k] = postfetch;\n      }\n      if (transformer && isFunction(transformer)) {\n        this.transformerPool[k] = transformer;\n      }\n      this[k] = (requestParams = {}, requestOptions = {}, _useEmptyHeaders) => {\n        return this.baseFetch(\n          url,\n          options,\n          requestParams,\n          requestOptions,\n          k,\n          _useEmptyHeaders || useEmptyHeaders\n        );\n      };\n      this.actions[k] = this[k];\n    });\n  };\n\n  /**\n   * @description Reducer you export to your store.\n   * This will extract name of the function ( as it containes prefix and sufix).\n   * Calls generic reducer set for given name.\n   * @param {Object} state - state\n   * @param {Object} action - action\n   * @memberof Communicator\n   */\n  reducer = (state = this.genererateInitialState(), action) => {\n    if (action.type.indexOf(this.basePrefix) === -1) return state;\n    let name = action.type.substring(this.basePrefix.length);\n    if (name.indexOf(\"_success\") !== -1) {\n      name = name.replace(\"_success\", \"\");\n    }\n    if (name.indexOf(\"_fail\") !== -1) {\n      name = name.replace(\"_fail\", \"\");\n    }\n    return this.reducerPool[name](state, action);\n  };\n\n  /**\n   * @description reducer for specific function name\n   * @param {String} k - name of the function\n   * @param {Object} state - state\n   * @param {Object} action - action\n   * @memberof Communicator\n   */\n  constructGenericReducer = k => (state, action) => {\n    const newState = Object.assign({}, state);\n    newState[k] = Object.assign({}, state[k]);\n    /* Object.keys(state).forEach(key => {\n      newState[key] = Object.assign({}, state[key]);\n    }); */\n    if (action.loading) {\n      if (newState.isLoading && newState.isLoading.length) {\n        newState.isLoading.push(k);\n      } else {\n        newState.isLoading = [];\n        newState.isLoading.push(k);\n      }\n    } else {\n      if (\n        newState.isLoading &&\n        newState.isLoading.length &&\n        newState.isLoading.indexOf(k) !== -1\n      ) {\n        newState.isLoading.splice(newState.isLoading.indexOf(k), 1);\n      }\n      if (newState.isLoading && newState.isLoading.length === 0) {\n        newState.isLoading = false;\n      }\n    }\n    /* newState.isLoading = action.loading; */\n    if (action.type.indexOf(\"_success\") !== -1) {\n      newState[k].loading = false;\n      newState[k].data = action.payload.data;\n      newState[k].ok = action.payload.msg.ok;\n      newState[k].redirected = action.payload.msg.redirected;\n      newState[k].status = action.payload.msg.status;\n      newState[k].type = action.payload.msg.type;\n    } else if (action.type.indexOf(\"_fail\") !== -1) {\n      newState[k].loading = false;\n      newState[k].ok = action.payload.msg.ok;\n      newState[k].redirected = action.payload.msg.redirected;\n      newState[k].status = action.payload.msg.status;\n      newState[k].type = action.payload.msg.type;\n      newState[k].error = action.payload.error;\n    } else {\n      newState[k].loading = true;\n      newState[k].request = action.payload.request;\n      newState[k].params = action.payload.params;\n    }\n    return newState;\n  };\n\n  /**\n   * @description Function that creates initial state for each api call for reducer.\n   * @returns state for api reducer\n   */\n  genererateInitialState = () => {\n    const state = {};\n    state.isLoading = false;\n    Object.keys(this.reducerPool).forEach(k => {\n      state[k] = {\n        request: \"\",\n        params: \"{}\",\n        data: this.transformerPool[k],\n        ok: undefined,\n        redirected: undefined,\n        status: 0,\n        type: \"\"\n      };\n    });\n    return state;\n  };\n\n  /**\n   * @description Function that creates redux action.\n   * Adds pefix to type\n   * @param {String} name - name of the action\n   * @param {Object} request - payload item\n   * @param {Object} params - payload item\n   */\n  actionStart = (name, request, params) => ({\n    type: `${this.basePrefix}${name}`,\n    /* name, */\n    loading: true,\n    payload: {\n      request,\n      params\n    }\n  });\n  /**\n   * @description Function that creates redux action.\n   * Adds sufix to type\n   * @param {String} name - name of the action\n   * @param {Object} request - payload item\n   * @param {Object} params - payload item\n   */\n  actionEnd = (name, data, msg = {}) => ({\n    type: `${this.basePrefix}${name}_success`,\n    /* name, */\n    loading: false,\n    payload: {\n      data,\n      msg\n    }\n  });\n  /**\n   * @description Function that creates redux action.\n   * Adds sufix to type\n   * @param {String} name - name of the action\n   * @param {Object} request - payload item\n   * @param {Object} params - payload item\n   */\n  actionError = (name, msg = {}, error) => ({\n    type: `${this.basePrefix}${name}_fail`,\n    loading: false,\n    payload: {\n      msg,\n      error\n    }\n  });\n\n  /* TODO prefetch */\n  /* resolvePrefetch = (prefetch, url, request, params) => {\n    if (!prefetch || !_.isFunction(prefetch)) {\n      console.log(errors.PREFETCH_NOT_A_FUNCTION);\n      return false;\n    }\n    this.baseFetch();\n  }; */\n\n  getReducer = () => this.reducer;\n  setBaseUrl = url => {\n    this.baseUrl = url;\n  };\n  setDispatcher = dispatch => {\n    this.dispatch = dispatch;\n  };\n  setPrefix = prefix => {\n    this.basePrefix = prefix;\n  };\n  setFetch = _fetch => {\n    this.fetch = _fetch.bind(window);\n  };\n  setBaseOptions = options => {\n    this.baseOptions = options;\n  };\n  setGetState = getState => {\n    this.getState = getState;\n  };\n}\n\nexport default new Communicator();\n"],"names":["object","data","isObject","toPlainObject","array","isArray","toArray","excluded","positiveResponseStatus","errors","mergeTwo","obj1","obj2","_obj2","out","keys","forEach","babelHelpers.typeof","k","constructor","Array","concat","Object","assign","deepMerge","args","e","log","JSON","parse","stringify","Communicator","baseUrl","dispatch","fetch","bind","window","reducerPool","prefetchPool","postfetchPool","transformerPool","actions","getState","undefined","basePrefix","baseOptions","constructUrl","endPointUrl","request","url","indexOf","key","regex","RegExp","test","replace","getGetParamsAsString","getObj","i","getBody","body","processParams","params","PARAMS_NOT_OBJECT","PARAM_OBJECT_ERROR","baseFetch","options","requestParams","reqestOptions","useEmptyHeaders","expected","endOption","headers","name","pf","res","actionStart","then","response","ok","redirected","status","type","Promise","all","resolve","actionEnd","json","catch","actionError","message","setEndpoints","endpoints","prefetch","reducer","postfetch","transformer","transformers","constructGenericReducer","isFunction","requestOptions","_useEmptyHeaders","state","genererateInitialState","action","substring","length","newState","loading","isLoading","push","splice","payload","msg","error","getReducer","setBaseUrl","setDispatcher","setPrefix","prefix","setFetch","_fetch","setBaseOptions","setGetState"],"mappings":"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"}