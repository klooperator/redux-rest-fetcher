{"version":3,"file":"index.js","sources":["../src/Transformers.js","../src/index.js","../Communicator.js"],"sourcesContent":["import { isObject, isArray, toPlainObject, toArray } from 'lodash';\n\nconst object = (data = {}) => {\n  if (isObject(data)) return data;\n  return toPlainObject(data);\n};\nconst array = (data = []) => {\n  if (isArray) return data;\n  return toArray(data);\n};\n\nconst cumulativeArray = check => (data = [], oldData = []) => {\n  if (!data) return oldData;\n  if (!check) return oldData.concat(isArray(data) ? data : toArray(data));\n  const newData = [...oldData];\n  data.forEach((d) => {\n    let doesExist = false;\n    oldData.forEach((o, i) => {\n      if (d[check] === o[check]) {\n        newData[i] = d;\n        doesExist = true;\n      }\n    });\n    if (!doesExist)newData.push(d);\n  });\n  return newData;\n};\n\nexport default {\n  object,\n  array,\n  cumulativeArray,\n};\n","// eslint-disable import/prefer-default-export\nexport { default as transformers } from './Transformers';\n\nexport default {};\n","/* import  */\nimport { isObject, isFunction, isArray } from 'lodash';\nimport { transformers } from './src/index';\n\n/* CONSTS */\nconst excluded = ['body', 'GET', 'expected'];\nconst positiveResponseStatus = [200, 201, 202, 204, 205];\n\n/**\n * @description Error object containing error messages\n * @todo Implement proper error objects\n * @memberof Communicator\n */\nconst errors = {\n  PREFETCH_NOT_A_FUNCTION:\n    'Prefetch is expected to be a function. I dont know what I have here...',\n  PARAMS_NOT_OBJECT: 'Error with params. You shoud pass object as params.',\n  PARAM_OBJECT_ERROR:\n    'Error, your object, in params... There is something wrong with it.',\n};\n\n/**\n * @description Merges 2 object recursavly, overriding values from second to first object.\n * @param {Obect} obj1 - firs object, will be overriden\n * @param {Obect} obj2 - second object\n */\nconst mergeTwo = (obj1, obj2) => {\n  const _obj2 = obj2;\n  let out = {};\n  Object.keys(obj1).forEach((k) => {\n    if (typeof obj1[k] === 'object' && obj1[k].constructor !== Array) {\n      if (obj2[k] && typeof obj2[k] === 'object') {\n        out[k] = mergeTwo(obj1[k], obj2[k]);\n      } else {\n        out[k] = obj1[k];\n      }\n    } else if (obj1[k].constructor === Array) {\n      out[k] = obj1[k];\n      if (obj2[k] && obj2[k].constructor === Array) {\n        out[k] = obj1[k].concat(obj2[k]);\n      }\n    } else if (obj2[k]) {\n      out[k] = obj2[k];\n    } else out[k] = obj1[k];\n    delete _obj2[k];\n  });\n  out = Object.assign({}, out, _obj2);\n  return out;\n};\n/**\n * @description Merges multiple objects recursevly\n * @param {Spread of objects} args\n */\nconst deepMerge = (...args) => {\n  let out = {};\n  args.forEach((e) => {\n    if (e.constructor === Object) out = mergeTwo(out, e);\n  });\n  return out;\n};\n\nclass Communicator {\n  constructor(baseUrl = '', dispatch = null) {\n    this.baseUrl = baseUrl;\n    this.dispatch = dispatch;\n    this.fetch = fetch.bind(window);\n    this.reducerPool = {};\n    this.prefetchPool = {};\n    this.postfetchPool = {};\n    this.transformerPool = {};\n    this.actions = {};\n    this.getState = undefined;\n    this.basePrefix = 'api(.)(.)';\n    this.baseOptions = {\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Cache: 'no-cache',\n        credentials: 'same-origin',\n      },\n    };\n  }\n\n  getHelpers = () => ({\n    deepMerge,\n    actionEnd: this.actionEnd,\n    actionError: this.actionError,\n  })\n\n  /**\n   * @description Function used for constructing url and inserting parametars in to the\n   * predefined holders.\n   * @example\n   * baseUrl = localhost\n   * url = /url/:id\n   * request = {id: '22'}\n   * output = localhost/url/22\n   * Function also accepts absolute url, in which case will skip adding base url.\n   * Absoulute url must contain http:// or https://\n   * @example\n   * baseUrl = localhost\n   * url = http://someurl.com/url/:id\n   * request = {id: '22'}\n   * output = someurl.com/url/22\n   * @param {Object} - request object\n   * @param {String} - original url\n   * @return {String} - url with inserted request parametars\n   * @memberof Communicator\n   */\n  constructUrl = (endPointUrl, request) => {\n    let url = endPointUrl;\n    if (endPointUrl.indexOf('http') === -1) {\n      url = `${this.baseUrl}${endPointUrl}`;\n    }\n    if (isObject(request)) {\n      Object.keys(request).forEach((key) => {\n        if (excluded.indexOf(key) === -1) {\n          const regex = new RegExp(`:${key}`);\n          if (regex.test(url)) {\n            url = url.replace(regex, request[key]);\n          }\n        } else if (key === 'GET') {\n          url += this.getGetParamsAsString(request[key]);\n        }\n      });\n    }\n    return url;\n  };\n\n  /**\n   * @description Helper function that converts js object to GET params string.\n   * {id:'123', user:'some'} -> \"?id=123&user=some\"\n   * @param {Object} getObj - object containing GET key value pairs\n   * @memberof Communicator\n   */\n  getGetParamsAsString = (getObj) => {\n    let out = '?';\n    Object.keys(getObj).forEach((k, i) => {\n      if (typeof getObj[k] !== 'object' && typeof getObj[k] !== 'function') { out = `${out + (i !== 0 ? '&' : '') + k}=${getObj[k]}`; }\n    });\n    return out;\n  };\n\n  /**\n   * @description\n   * Helper function that extracts , checks and prepares body object\n   * @param {Object} request - request object containing body key.\n   * body can either be preparsed or as js object.\n   * @returns {Object} - {body: JSON.stringify()}\n   */\n  getBody = (request) => {\n    if (!request.body) return false;\n    if (typeof request.body === 'string' && isObject(JSON.parse(request.body))) { return { body: request.body }; }\n    if (isObject(request.body)) return { body: JSON.stringify(request.body) };\n    return false;\n  };\n\n  /**\n   * @description Function that processes params of the request such as body.\n   * You can send value either as object or as stringified object\n   * @param {Object} - params object\n   * @return {Object} - object containing keys and stringified values\n   * @memberof Communicator\n   *\n   */\n  processParams = (params) => {\n    if (!isObject(params)) throw errors.PARAMS_NOT_OBJECT;\n    const out = {};\n    Object.keys(params).forEach((k) => {\n      switch (typeof params[k]) {\n        case 'object':\n          out[k] = JSON.stringify(params[k]);\n          break;\n        case 'string':\n          if (!isObject(JSON.parse(params[k]))) {\n            throw errors.PARAM_OBJECT_ERROR;\n          } else out[k] = params[k];\n          break;\n        default:\n          break;\n      }\n    });\n    return out;\n  };\n\n  /**\n   * @description This is a main fetch function. This will resolve the action and return either\n   *  a Promise if no dispatch is provided or it will dispatch\n   * success/ failure action to redux.\n   * @param {String} url - target url. This will be modified by request object if needed\n   * @param {Object} options - options of the request. Options contains data like headers, method\n   * type and other data you want to include to fetch request.\n   * This will be merged with baseOptions ( globals you can set at creation, options that apply to\n   *  all) and param options. Param options contains aditional\n   * data like body or can modifiy request overriding baseOptions and setted request options.\n   * @param {Object} request - object containing request data that will modify end URL. TODO -\n   * maybe move body params here...\n   * @param {String} name - Name of the api action. Based on name a appropriate action will be\n   * dispatched.\n   * @param {Boolean} useEmptyHeaders - if true, empty headers will be sent.\n   * @todo test expected response json/text\n   */\n  baseFetch = (\n    url,\n    options = {} /* options from call */,\n    requestParams = {} /* get, post params */,\n    reqestOptions = {} /* options from a singel call */,\n    name,\n    useEmptyHeaders = false\n  ) => {\n    const expected = requestParams.expected || 'json';\n    /* let endPointUrl; */\n    let endOption = deepMerge(\n      this.baseOptions,\n      options,\n      reqestOptions\n      /* we add body later */\n    );\n    /* clear headers if needed */\n    if (useEmptyHeaders) endOption = { headers: {} };\n\n    let object = {\n      actions: this.actions,\n      getState: this.getState,\n      dispatch: this.dispatch,\n      params: requestParams,\n      options: endOption,\n      url,\n      helpers: this.getHelpers(),\n    };\n\n    if (this.prefetchPool[name] && this.getState) {\n      /* we need this to be an array... */\n      const pf = isArray(this.prefetchPool[name])\n        ? this.prefetchPool[name]\n        : [this.prefetchPool[name]];\n\n      /* you can either change object directly or return {params, options} */\n      pf.forEach((e) => {\n        const res = e(object);\n        if (res) object = deepMerge(object, res);\n      });\n    }\n\n    endOption = deepMerge(object.options, this.getBody(object.params));\n    const endPointUrl = this.constructUrl(object.url, object.params);\n    /* if no dispatch return promise */\n    if (!this.dispatch || this.dispatch === null) {\n      return this.fetch(endPointUrl, endOption);\n    }\n    /* dispatch action start */\n    this.dispatch(this.actionStart(name, endPointUrl, endOption));\n    /* fetch part */\n    let res;\n    this.fetch(endPointUrl, endOption)\n      .then((response) => {\n        /* this object will be passes to second .then to be included in END dispatch */\n        res = {\n          ok: response.ok,\n          redirected: response.redirected,\n          status: response.status,\n          type: response.type,\n          url: response.url,\n        };\n        if (\n          positiveResponseStatus.indexOf(response.status) !== -1 ||\n          response.ok\n        ) {\n          return Promise.all([response[expected](), Promise.resolve(res)]);\n        }\n        throw response;\n      })\n      .then((json) => {\n        /* json[0]->actual response, json[1]->res object storing some metadata */\n        this.dispatch(this.actionEnd(name, json[0], json[1]));\n        if (this.postfetchPool[name]) {\n          let pfObj = {\n            actions: this.actions,\n            getState: this.getState,\n            dispatch: this.dispatch,\n            data: json[0],\n            helpers: this.getHelpers(),\n          };\n          const pf = isArray(this.postfetchPool[name])\n            ? this.postfetchPool[name]\n            : [this.postfetchPool[name]];\n          pf.forEach((e) => {\n            const rpf = e(pfObj);\n            if (rpf)pfObj = deepMerge(pfObj, rpf);\n          });\n        }\n      })\n      .catch((e) => {\n        this.dispatch(this.actionError(name, res, e.message));\n      });\n    return true;\n  };\n\n  /**\n   * @description Function that creates functions from objects\n   * @param {Object} endpoints - object from witch function will be created.\n   * Keys will be the function names.\n   * @memberof Communicator\n   */\n  setEndpoints = (endpoints) => {\n    Object.keys(endpoints).forEach((k) => {\n      const {\n        url,\n        prefetch,\n        reducer,\n        options,\n        useEmptyHeaders,\n        postfetch,\n        transformer = transformers.object,\n      } = endpoints[k];\n\n      if (reducer) this.reducerPool[k] = reducer;\n      else this.reducerPool[k] = this.constructGenericReducer(k);\n      if (prefetch && (isFunction(prefetch) || isArray(prefetch))) {\n        this.prefetchPool[k] = prefetch;\n      }\n      if (postfetch && (isFunction(postfetch) || isArray(postfetch))) {\n        this.postfetchPool[k] = postfetch;\n      }\n      if (transformer && isFunction(transformer)) {\n        this.transformerPool[k] = transformer;\n      }\n      this[k] = (requestParams = {}, requestOptions = {}, _useEmptyHeaders) => this.baseFetch(\n        url,\n        options,\n        requestParams,\n        requestOptions,\n        k,\n        _useEmptyHeaders || useEmptyHeaders\n      );\n      this.actions[k] = this[k];\n    });\n  };\n\n  /**\n   * @description Reducer you export to your store.\n   * This will extract name of the function ( as it containes prefix and sufix).\n   * Calls generic reducer set for given name.\n   * @param {Object} state - state\n   * @param {Object} action - action\n   * @memberof Communicator\n   */\n  reducer = (state = this.genererateInitialState(), action) => {\n    if (action.type.indexOf(this.basePrefix) === -1) return state;\n    let name = action.type.substring(this.basePrefix.length);\n    if (name.indexOf('_success') !== -1) {\n      name = name.replace('_success', '');\n    }\n    if (name.indexOf('_fail') !== -1) {\n      name = name.replace('_fail', '');\n    }\n    return this.reducerPool[name](state, action);\n  };\n\n  /**\n   * @description reducer for specific function name\n   * @param {String} k - name of the function\n   * @param {Object} state - state\n   * @param {Object} action - action\n   * @memberof Communicator\n   */\n  constructGenericReducer = k => (state, action) => {\n    const newState = Object.assign({}, state);\n    newState[k] = Object.assign({}, state[k]);\n    /* Object.keys(state).forEach(key => {\n      newState[key] = Object.assign({}, state[key]);\n    }); */\n    if (action.loading) {\n      if (newState.isLoading && newState.isLoading.length) {\n        newState.isLoading.push(k);\n      } else {\n        newState.isLoading = [];\n        newState.isLoading.push(k);\n      }\n    } else {\n      if (\n        newState.isLoading &&\n        newState.isLoading.length &&\n        newState.isLoading.indexOf(k) !== -1\n      ) {\n        newState.isLoading.splice(newState.isLoading.indexOf(k), 1);\n      }\n      if (newState.isLoading && newState.isLoading.length === 0) {\n        newState.isLoading = false;\n      }\n    }\n    /* newState.isLoading = action.loading; */\n    if (action.type.indexOf('_success') !== -1) {\n      newState[k].loading = false;\n      newState[k].data = this.transformerPool[k](action.payload.data);\n      newState[k].ok = action.payload.msg.ok;\n      newState[k].redirected = action.payload.msg.redirected;\n      newState[k].status = action.payload.msg.status;\n      newState[k].type = action.payload.msg.type;\n    } else if (action.type.indexOf('_fail') !== -1) {\n      newState[k].loading = false;\n      newState[k].ok = action.payload.msg.ok;\n      newState[k].redirected = action.payload.msg.redirected;\n      newState[k].status = action.payload.msg.status;\n      newState[k].type = action.payload.msg.type;\n      newState[k].error = action.payload.error;\n    } else {\n      newState[k].loading = true;\n      newState[k].request = action.payload.request;\n      newState[k].params = action.payload.params;\n    }\n    return newState;\n  };\n\n  /**\n   * @description Function that creates initial state for each api call for reducer.\n   * @returns state for api reducer\n   */\n  genererateInitialState = () => {\n    const state = {};\n    state.isLoading = false;\n    Object.keys(this.reducerPool).forEach((k) => {\n      state[k] = {\n        request: '',\n        params: '{}',\n        data: this.transformerPool[k](),\n        ok: undefined,\n        redirected: undefined,\n        status: 0,\n        type: '',\n      };\n    });\n    return state;\n  };\n\n  /**\n   * @description Function that creates redux action.\n   * Adds pefix to type\n   * @param {String} name - name of the action\n   * @param {Object} request - payload item\n   * @param {Object} params - payload item\n   */\n  actionStart = (name, request, params) => ({\n    type: `${this.basePrefix}${name}`,\n    /* name, */\n    loading: true,\n    payload: {\n      request,\n      params,\n    },\n  });\n  /**\n   * @description Function that creates redux action.\n   * Adds sufix to type\n   * @param {String} name - name of the action\n   * @param {Object} request - payload item\n   * @param {Object} params - payload item\n   */\n  actionEnd = (name, data, msg = {}) => ({\n    type: `${this.basePrefix}${name}_success`,\n    /* name, */\n    loading: false,\n    payload: {\n      data,\n      msg,\n    },\n  });\n  /**\n   * @description Function that creates redux action.\n   * Adds sufix to type\n   * @param {String} name - name of the action\n   * @param {Object} request - payload item\n   * @param {Object} params - payload item\n   */\n  actionError = (name, msg = {}, error) => ({\n    type: `${this.basePrefix}${name}_fail`,\n    loading: false,\n    payload: {\n      msg,\n      error,\n    },\n  });\n\n  /* TODO prefetch */\n  /* resolvePrefetch = (prefetch, url, request, params) => {\n    if (!prefetch || !_.isFunction(prefetch)) {\n      console.log(errors.PREFETCH_NOT_A_FUNCTION);\n      return false;\n    }\n    this.baseFetch();\n  }; */\n\n  getReducer = () => this.reducer;\n  setBaseUrl = (url) => {\n    this.baseUrl = url;\n  };\n  setDispatcher = (dispatch) => {\n    this.dispatch = dispatch;\n  };\n  setPrefix = (prefix) => {\n    this.basePrefix = prefix;\n  };\n  setFetch = (_fetch) => {\n    this.fetch = _fetch.bind(window);\n  };\n  setBaseOptions = (options) => {\n    this.baseOptions = options;\n  };\n  setGetState = (getState) => {\n    this.getState = getState;\n  };\n}\n\nexport default new Communicator();\n"],"names":["object","data","isObject","toPlainObject","array","isArray","toArray","cumulativeArray","oldData","check","concat","newData","forEach","d","doesExist","o","i","push","excluded","positiveResponseStatus","errors","mergeTwo","obj1","obj2","_obj2","out","keys","k","babelHelpers.typeof","constructor","Array","Object","assign","deepMerge","args","e","Communicator","baseUrl","dispatch","fetch","bind","window","reducerPool","prefetchPool","postfetchPool","transformerPool","actions","getState","undefined","basePrefix","baseOptions","getHelpers","actionEnd","actionError","constructUrl","endPointUrl","request","url","indexOf","key","regex","RegExp","test","replace","getGetParamsAsString","getObj","getBody","body","JSON","parse","stringify","processParams","params","PARAMS_NOT_OBJECT","PARAM_OBJECT_ERROR","baseFetch","options","requestParams","reqestOptions","useEmptyHeaders","expected","endOption","headers","name","pf","res","actionStart","then","response","ok","redirected","status","type","Promise","all","resolve","json","pfObj","rpf","catch","message","setEndpoints","endpoints","prefetch","reducer","postfetch","transformer","transformers","constructGenericReducer","isFunction","requestOptions","_useEmptyHeaders","state","genererateInitialState","action","substring","length","newState","loading","isLoading","splice","payload","msg","error","getReducer","setBaseUrl","setDispatcher","setPrefix","prefix","setFetch","_fetch","setBaseOptions","setGetState"],"mappings":"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"}