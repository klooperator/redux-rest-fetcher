{"version":3,"file":"index.js","sources":["../Communicator.js"],"sourcesContent":["/* import  */\nimport { isObject, isFunction, isArray } from \"lodash\";\n\n/* CONSTS */\nconst excluded = [\"body\", \"GET\", \"expected\"];\nconst positiveResponseStatus = [200, 201, 202, 204, 205];\n\n/**\n * @description Error object containing error messages\n * @todo Implement proper error objects\n * @memberof Communicator\n */\nconst errors = {\n  PREFETCH_NOT_A_FUNCTION:\n    \"Prefetch is expected to be a function. I dont know what I have here...\",\n  PARAMS_NOT_OBJECT: \"Error with params. You shoud pass object as params.\",\n  PARAM_OBJECT_ERROR:\n    \"Error, your object, in params... There is something wrong with it.\"\n};\n\n/**\n * @description Merges 2 object recursavly, overriding values from second to first object.\n * @param {Obect} obj1 - firs object, will be overriden\n * @param {Obect} obj2 - second object\n */\nconst mergeTwo = (obj1, obj2) => {\n  const _obj2 = obj2;\n  let out = {};\n  Object.keys(obj1).forEach(k => {\n    if (typeof obj1[k] === \"object\" && obj1[k].constructor !== Array) {\n      if (obj2[k] && typeof obj2[k] === \"object\") {\n        out[k] = mergeTwo(obj1[k], obj2[k]);\n      } else {\n        out[k] = obj1[k];\n      }\n    } else if (obj1[k].constructor === Array) {\n      out[k] = obj1[k];\n      if (obj2[k] && obj2[k].constructor === Array) {\n        out[k] = obj1[k].concat(obj2[k]);\n      }\n    } else if (obj2[k]) {\n      out[k] = obj2[k];\n    } else out[k] = obj1[k];\n    delete _obj2[k];\n  });\n  out = Object.assign({}, out, _obj2);\n  return out;\n};\n/**\n * @description Merges multiple objects recursevly\n * @param {Spread of objects} args\n */\nconst deepMerge = (...args) => {\n  let out = {};\n  args.forEach(e => {\n    if (e.constructor === Object) out = mergeTwo(out, e);\n  });\n  return out;\n};\n\nclass Communicator {\n  constructor(baseUrl = \"\", dispatch = null) {\n    this.baseUrl = baseUrl;\n    this.dispatch = dispatch;\n    this.fetch = fetch.bind(window);\n    this.reducerPool = {};\n    this.prefetchPool = {};\n    this.getState = undefined;\n    this.basePrefix = \"api(.)(.)\";\n    this.baseOptions = {\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Cache: \"no-cache\",\n        credentials: \"same-origin\"\n      }\n    };\n  }\n\n  /**\n   * @description Function used for constructing url and inserting parametars in to the\n   * predefined holders.\n   * @example\n   * baseUrl = localhost\n   * url = /url/:id\n   * request = {id: '22'}\n   * output = localhost/url/22\n   * Function also accepts absolute url, in which case will skip adding base url.\n   * Absoulute url must contain http:// or https://\n   * @example\n   * baseUrl = localhost\n   * url = http://someurl.com/url/:id\n   * request = {id: '22'}\n   * output = someurl.com/url/22\n   * @param {Object} - request object\n   * @param {String} - original url\n   * @return {String} - url with inserted request parametars\n   * @memberof Communicator\n   */\n  constructUrl = (endPointUrl, request) => {\n    let url = endPointUrl;\n    if (endPointUrl.indexOf(\"http\") === -1) {\n      url = `${this.baseUrl}${endPointUrl}`;\n    }\n    if (isObject(request)) {\n      Object.keys(request).forEach(key => {\n        if (excluded.indexOf(key) === -1) {\n          const regex = new RegExp(`:${key}`);\n          if (regex.test(url)) {\n            url = url.replace(regex, request[key]);\n          }\n        } else if (key === \"GET\") {\n          url = url + this.getGetParamsAsString(request[key]);\n        }\n      });\n    }\n    return url;\n  };\n\n  /**\n   * @description Helper function that converts js object to GET params string.\n   * {id:'123', user:'some'} -> \"?id=123&user=some\"\n   * @param {Object} getObj - object containing GET key value pairs\n   * @memberof Communicator\n   */\n  getGetParamsAsString = getObj => {\n    let out = \"?\";\n    Object.keys(getObj).forEach((k, i) => {\n      if (typeof getObj[k] !== \"object\" && typeof getObj[k] !== \"function\")\n        out = out + (i !== 0 ? \"&\" : \"\") + k + \"=\" + getObj[k];\n    });\n    return out;\n  };\n\n  /**\n   * @description\n   * Helper function that extracts , checks and prepares body object\n   * @param {Object} request - request object containing body key.\n   * body can either be preparsed or as js object.\n   * @returns {Object} - {body: JSON.stringify()}\n   */\n  getBody = request => {\n    if (!request.body) return false;\n    if (typeof request.body === \"string\" && isObject(JSON.parse(request.body)))\n      return { body: request.body };\n    if (isObject(request.body)) return { body: JSON.stringify(request.body) };\n    return false;\n  };\n\n  /**\n   * @description Function that processes params of the request such as body.\n   * You can send value either as object or as stringified object\n   * @param {Object} - params object\n   * @return {Object} - object containing keys and stringified values\n   * @memberof Communicator\n   *\n   */\n  processParams = params => {\n    /* TODO - separate body and rest. add ability to pass new fetch options overrides */\n    if (!isObject(params)) throw errors.PARAMS_NOT_OBJECT;\n    const out = {};\n    Object.keys(params).forEach(k => {\n      switch (typeof params[k]) {\n        case \"object\":\n          out[k] = JSON.stringify(params[k]);\n          break;\n        case \"string\":\n          if (!isObject(JSON.parse(params[k]))) {\n            throw errors.PARAM_OBJECT_ERROR;\n          } else out[k] = params[k];\n          break;\n        default:\n          break;\n      }\n    });\n    return out;\n  };\n\n  /**\n   * @description This is a main fetch function. This will resolve the action and return either a Promise if no\n   *  dispatch is provided or it will dispatch\n   * success/ failure action to redux.\n   * @param {String} url - target url. This will be modified by request object if needed\n   * @param {Object} options - options of the request. Options contains data like headers, method\n   * type and other data you want to include to fetch request.\n   * This will be merged with baseOptions ( globals you can set at creation, options that apply to\n   *  all) and param options. Param options contains aditional\n   * data like body or can modifiy request overriding baseOptions and setted request options.\n   * @param {Object} request - object containing request data that will modify end URL. TODO -\n   * maybe move body params here...\n   * @param {String} name - Name of the api action. Based on name a appropriate action will be\n   * dispatched.\n   * @param {Boolean} useEmptyHeaders - if true, empty headers will be sent.\n   * @todo test expected response json/text\n   */\n  baseFetch = (\n    url,\n    options = {} /* options from call */,\n    requestParams = {} /* get, post params */,\n    reqestOptions = {} /* options from a singel call */,\n    name,\n    useEmptyHeaders = false\n  ) => {\n    const expected = requestParams.expected || \"json\";\n    /* construct url */\n    let endPointUrl = this.constructUrl(url, requestParams);\n    /* set params */\n    /* let _params;\n    try {\n      _params = this.processParams(params);\n    } catch (e) {\n      console.log(e.message);\n      return e;\n    } */\n    /* merge (TODO deep) baseOptions<-options<-params options */\n    /* let endOption = Object.assign({}, this.baseOptions, options, _params); */\n    let endOption = deepMerge(\n      this.baseOptions,\n      options,\n      reqestOptions,\n      this.getBody(requestParams)\n    );\n    /* clear headers if needed */\n    if (useEmptyHeaders) endOption = { headers: {} };\n\n    console.log(requestParams, endOption);\n\n    if (this.prefetchPool[name] && this.getState) {\n      const pf = isArray(this.prefetchPool[name])\n        ? this.prefetchPool[name]\n        : [this.prefetchPool[name]];\n      let object = {\n        getState: this.getState,\n        dispatch: this.dispatch,\n        requestParams,\n        options: endOption\n      };\n      /* you can either change object directly or return {request, response} */\n      pf.forEach(e => {\n        console.log(object);\n        console.log(e);\n        const res = e(object);\n        if (res) object = deepMerge(object, res);\n      });\n      /* const pref = this.prefetchPool[name](this.getState())(request, endOption); */\n      if (object.request)\n        endPointUrl = this.constructUrl(\n          object.request.url || url,\n          object.request\n        );\n      if (object.options)\n        endOption = deepMerge(\n          object.options,\n          this.getBody(object.request || requestParams)\n        );\n    } else {\n      endOption = deepMerge(endOption, this.getBody(requestParams));\n    }\n    /* if no dispatch return promise */\n    if (!this.dispatch || this.dispatch === null) {\n      /* console.log(\"no dispatch\"); */\n      return this.fetch(endPointUrl, endOption);\n    }\n    /* dispatch action start */\n    this.dispatch(this.actionStart(name, endPointUrl, endOption));\n    /* fetch part */\n    let res;\n    this.fetch(endPointUrl, endOption)\n      .then(response => {\n        /* this object will be passes to second .then to be included in END dispatch */\n        res = {\n          ok: response.ok,\n          redirected: response.redirected,\n          status: response.status,\n          type: response.type,\n          url: response.url\n        };\n        if (\n          positiveResponseStatus.indexOf(response.status) !== -1 ||\n          response.ok\n        ) {\n          return Promise.all([response[expected](), Promise.resolve(res)]);\n        }\n        throw response;\n      })\n      .then(json => {\n        this.dispatch(this.actionEnd(name, json[0], json[1]));\n      })\n      .catch(e => {\n        this.dispatch(this.actionError(name, res, e.message));\n      });\n    return true;\n  };\n\n  /**\n   * @description Function that creates functions from objects\n   * @param {Object} endpoints - object from witch function will be created.\n   * Keys will be the function names.\n   * @memberof Communicator\n   */\n  setEndpoints = endpoints => {\n    Object.keys(endpoints).forEach(k => {\n      const { url, prefetch, reducer, options, useEmptyHeaders } = endpoints[k];\n\n      if (reducer) this.reducerPool[k] = reducer;\n      else this.reducerPool[k] = this.constructGenericReducer(k);\n      if (prefetch && isFunction(prefetch)) {\n        this.prefetchPool[k] = prefetch;\n      }\n      this[k] = (requestParams = {}, requestOptions = {}, _useEmptyHeaders) => {\n        return this.baseFetch(\n          url,\n          options,\n          requestParams,\n          requestOptions,\n          k,\n          _useEmptyHeaders || useEmptyHeaders\n        );\n      };\n    });\n  };\n\n  /**\n   * @description Reducer you export to your store.\n   * This will extract name of the function ( as it containes prefix and sufix).\n   * Calls generic reducer set for given name.\n   * @param {Object} state - state\n   * @param {Object} action - action\n   * @memberof Communicator\n   */\n  reducer = (state = this.genererateInitialState(), action) => {\n    if (action.type.indexOf(this.basePrefix) === -1) return state;\n    let name = action.type.substring(this.basePrefix.length);\n    if (name.indexOf(\"_success\") !== -1) {\n      name = name.replace(\"_success\", \"\");\n    }\n    if (name.indexOf(\"_fail\") !== -1) {\n      name = name.replace(\"_fail\", \"\");\n    }\n    return this.reducerPool[name](state, action);\n  };\n\n  /**\n   * @description reducer for specific function name\n   * @param {String} k - name of the function\n   * @param {Object} state - state\n   * @param {Object} action - action\n   * @memberof Communicator\n   */\n  constructGenericReducer = k => (state, action) => {\n    const newState = Object.assign({}, state);\n    newState[k] = Object.assign({}, state[k]);\n    /* Object.keys(state).forEach(key => {\n      newState[key] = Object.assign({}, state[key]);\n    }); */\n    if (action.loading) {\n      if (newState.isLoading && newState.isLoading.length) {\n        newState.isLoading.push(k);\n      } else {\n        newState.isLoading = [];\n        newState.isLoading.push(k);\n      }\n    } else {\n      if (\n        newState.isLoading &&\n        newState.isLoading.length &&\n        newState.isLoading.indexOf(k) !== -1\n      ) {\n        newState.isLoading.splice(newState.isLoading.indexOf(k), 1);\n      }\n      if (newState.isLoading && newState.isLoading.length === 0) {\n        newState.isLoading = false;\n      }\n    }\n    /* newState.isLoading = action.loading; */\n    if (action.type.indexOf(\"_success\") !== -1) {\n      newState[k].loading = false;\n      newState[k].data = action.payload.data;\n      newState[k].ok = action.payload.msg.ok;\n      newState[k].redirected = action.payload.msg.redirected;\n      newState[k].status = action.payload.msg.status;\n      newState[k].type = action.payload.msg.type;\n    } else if (action.type.indexOf(\"_fail\") !== -1) {\n      newState[k].loading = false;\n      newState[k].ok = action.payload.msg.ok;\n      newState[k].redirected = action.payload.msg.redirected;\n      newState[k].status = action.payload.msg.status;\n      newState[k].type = action.payload.msg.type;\n      newState[k].error = action.payload.error;\n    } else {\n      newState[k].loading = true;\n      newState[k].request = action.payload.request;\n      newState[k].params = action.payload.params;\n    }\n    return newState;\n  };\n\n  /**\n   * @description Function that creates initial state for each api call for reducer.\n   * @returns state for api reducer\n   */\n  genererateInitialState = () => {\n    const state = {};\n    state.isLoading = false;\n    Object.keys(this.reducerPool).forEach(k => {\n      state[k] = {\n        request: \"\",\n        params: \"{}\",\n        data: undefined,\n        ok: undefined,\n        redirected: undefined,\n        status: 0,\n        type: \"\"\n      };\n    });\n    return state;\n  };\n\n  /**\n   * @description Function that creates redux action.\n   * Adds pefix to type\n   * @param {String} name - name of the action\n   * @param {Object} request - payload item\n   * @param {Object} params - payload item\n   */\n  actionStart = (name, request, params) => ({\n    type: `${this.basePrefix}${name}`,\n    /* name, */\n    loading: true,\n    payload: {\n      request,\n      params\n    }\n  });\n  /**\n   * @description Function that creates redux action.\n   * Adds sufix to type\n   * @param {String} name - name of the action\n   * @param {Object} request - payload item\n   * @param {Object} params - payload item\n   */\n  actionEnd = (name, data, msg = {}) => ({\n    type: `${this.basePrefix}${name}_success`,\n    /* name, */\n    loading: false,\n    payload: {\n      data,\n      msg\n    }\n  });\n  /**\n   * @description Function that creates redux action.\n   * Adds sufix to type\n   * @param {String} name - name of the action\n   * @param {Object} request - payload item\n   * @param {Object} params - payload item\n   */\n  actionError = (name, msg = {}, error) => ({\n    type: `${this.basePrefix}${name}_fail`,\n    loading: false,\n    payload: {\n      msg,\n      error\n    }\n  });\n\n  /* TODO prefetch */\n  /* resolvePrefetch = (prefetch, url, request, params) => {\n    if (!prefetch || !_.isFunction(prefetch)) {\n      console.log(errors.PREFETCH_NOT_A_FUNCTION);\n      return false;\n    }\n    this.baseFetch();\n  }; */\n\n  getReducer = () => this.reducer;\n  setBaseUrl = url => {\n    this.baseUrl = url;\n  };\n  setDispatcher = dispatch => {\n    this.dispatch = dispatch;\n  };\n  setPrefix = prefix => {\n    this.basePrefix = prefix;\n  };\n  setFetch = _fetch => {\n    this.fetch = _fetch.bind(window);\n  };\n  setBaseOptions = options => {\n    this.baseOptions = options;\n  };\n  setGetState = getState => {\n    this.getState = getState;\n  };\n}\n\nexport default new Communicator();\n"],"names":["excluded","positiveResponseStatus","errors","mergeTwo","obj1","obj2","_obj2","out","keys","forEach","babelHelpers.typeof","k","constructor","Array","concat","Object","assign","deepMerge","args","e","Communicator","baseUrl","dispatch","fetch","bind","window","reducerPool","prefetchPool","getState","undefined","basePrefix","baseOptions","constructUrl","endPointUrl","request","url","indexOf","isObject","key","regex","RegExp","test","replace","getGetParamsAsString","getObj","i","getBody","body","JSON","parse","stringify","processParams","params","PARAMS_NOT_OBJECT","PARAM_OBJECT_ERROR","baseFetch","options","requestParams","reqestOptions","useEmptyHeaders","expected","endOption","headers","log","name","pf","isArray","object","res","actionStart","then","response","ok","redirected","status","type","Promise","all","resolve","actionEnd","json","catch","actionError","message","setEndpoints","endpoints","prefetch","reducer","constructGenericReducer","isFunction","requestOptions","_useEmptyHeaders","state","genererateInitialState","action","substring","length","newState","loading","isLoading","push","splice","data","payload","msg","error","getReducer","setBaseUrl","setDispatcher","setPrefix","prefix","setFetch","_fetch","setBaseOptions","setGetState"],"mappings":"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"}